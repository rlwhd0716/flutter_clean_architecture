name: flutter_clean_architecture
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.6.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  data:
    path: packages/data                 # 데이터 모듈 의존성 주입
  domain:
    path: packages/domain               # 도메인 모듈 의존성 주입
  util:
    path: packages/util                 # 유틸리티 모듈 의존성 주입

  chopper: ^8.0.3                       # 클라이언트 http 요청 패키지
  get_it: ^8.0.3                        # DI(의존성 주입) 패키지
  injectable: ^2.5.0                    # get_it DI code generator 패키지
  bloc: ^8.1.4                          # 상태관리 패키지
  flutter_bloc: ^8.1.6                  # 상태관리 패키지
  go_router: ^14.6.2                    # 경로 및 화면전환 관리 패키지
  json_annotation: ^4.9.0               # 객체 JsonSerializable 패키지 (어노테이션으로 제공)
  freezed_annotation: ^2.4.4            # 객체 Freezed 어노테이션
  equatable: ^2.0.7                     # 객체관리 패키지

  shared_preferences: ^2.5.2            # shared preferences 패키지
  formz: ^0.8.0                         # 입력 폼(TextField 등)에 사용자 입력 값에 대한 유효성 검사 제공 패키지
  # flutter_secure_storage: ^9.0.0      # secure storage 패키지 (API의 인증 Access token, refresh token 등 보관 용도)
  # flutter_speed_dial: ^6.2.0          # 햄버거 버튼 터치시 서브 메뉴 표시 처리 패키지
  # bottom_sheet: ^4.0.0                # 하단에 위젯 표시 처리 패키지
  # shimmer: ^3.0.0                     # 로딩 효과 패키지
  # toastification: ^3.0.1              # 토스트 UI 패키지


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  flutter_localizations:                # 다국어 패키지
    sdk: flutter
  intl: any                             # 포맷 패키지

dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^2.4.14                 # generator를 사용하기 위한 Builder
  injectable_generator: ^2.6.2          # 의존성 주입 코드 생성기
  json_serializable: ^6.9.0             # 객체 JsonSerializable 패키지 (Code Generator)
  freezed: ^2.5.7                       # 객체 비교 패키지 (주로 bloc state에서 사용되어 bloc 빌드 최적화시 상태 비교에 사용)

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
  generate: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
